/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.InventoryManager;

import Backend.EcoSystem;
import Backend.User.User;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
//import org.jfree.chart.ChartFactory;
//import org.jfree.chart.ChartPanel;
//import org.jfree.chart.JFreeChart;
//import org.jfree.chart.plot.PiePlot;
//import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author nehar
 */
public class Charts extends javax.swing.JPanel {

    /**
     * Creates new form ManageUsersJPanel
     */
    private EcoSystem system;
    private User user;

    public Charts(EcoSystem system) {
        initComponents();
        this.system = system;
        this.user = user;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orggeneratechartbtn = new javax.swing.JButton();
        chartPanel = new javax.swing.JPanel();
        lblgetpiechartavl = new javax.swing.JLabel();
        lblchartgender = new javax.swing.JLabel();
        gengeneratechartbtn = new javax.swing.JButton();
        lblnorecchart = new javax.swing.JLabel();
        recgeneratechartbtn = new javax.swing.JButton();
        headerlabel = new javax.swing.JLabel();
        bgdimg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(null);
        setMinimumSize(null);
        setPreferredSize(null);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orggeneratechartbtn.setBackground(new java.awt.Color(5, 30, 73));
        orggeneratechartbtn.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        orggeneratechartbtn.setForeground(new java.awt.Color(255, 255, 255));
        orggeneratechartbtn.setText("Generate Chart");
        orggeneratechartbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orggeneratechartbtnActionPerformed(evt);
            }
        });
        add(orggeneratechartbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 230, -1));

        chartPanel.setBackground(new java.awt.Color(153, 153, 153));
        chartPanel.setPreferredSize(new java.awt.Dimension(450, 500));

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        add(chartPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 490, 510));

        lblgetpiechartavl.setBackground(new java.awt.Color(55, 96, 128));
        lblgetpiechartavl.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        lblgetpiechartavl.setForeground(new java.awt.Color(255, 255, 255));
        lblgetpiechartavl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblgetpiechartavl.setText("Get Piechart for all the available organs");
        add(lblgetpiechartavl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 240, 26));

        lblchartgender.setBackground(new java.awt.Color(55, 96, 128));
        lblchartgender.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        lblchartgender.setForeground(new java.awt.Color(255, 255, 255));
        lblchartgender.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblchartgender.setText("Get Piechart for all the Gender");
        add(lblchartgender, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 230, 26));

        gengeneratechartbtn.setBackground(new java.awt.Color(5, 30, 73));
        gengeneratechartbtn.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        gengeneratechartbtn.setForeground(new java.awt.Color(255, 255, 255));
        gengeneratechartbtn.setText("Generate Chart");
        gengeneratechartbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gengeneratechartbtnActionPerformed(evt);
            }
        });
        add(gengeneratechartbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 230, -1));

        lblnorecchart.setBackground(new java.awt.Color(55, 96, 128));
        lblnorecchart.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        lblnorecchart.setForeground(new java.awt.Color(255, 255, 255));
        lblnorecchart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblnorecchart.setText("Get chart for no of receivers to donors");
        add(lblnorecchart, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 230, 26));

        recgeneratechartbtn.setBackground(new java.awt.Color(5, 30, 73));
        recgeneratechartbtn.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        recgeneratechartbtn.setForeground(new java.awt.Color(255, 255, 255));
        recgeneratechartbtn.setText("Generate Chart");
        recgeneratechartbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recgeneratechartbtnActionPerformed(evt);
            }
        });
        add(recgeneratechartbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 230, -1));

        headerlabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        headerlabel.setForeground(new java.awt.Color(255, 255, 255));
        headerlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerlabel.setText("Charts");
        add(headerlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 50));

        bgdimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blue-abstract-wave-flow-minimalist.jpg"))); // NOI18N
        bgdimg.setMaximumSize(null);
        bgdimg.setMinimumSize(null);
        bgdimg.setOpaque(true);
        bgdimg.setPreferredSize(null);
        add(bgdimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void orggeneratechartbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orggeneratechartbtnActionPerformed
        // TODO add your handling code here:
        int limbs = 0;
        int liver = 0;

        for (User user : system.getUserDirectory().getUserDirectory()) {
            if (user.isLimbs() == true) {
                limbs++;
            }
            if (user.isLiver() == true) {
                liver++;
            }

        }
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Limbs", limbs);
        
        pieDataset.setValue("Liver", liver);
        JFreeChart chart = ChartFactory.createPieChart("Pie chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();
        //P.setForegroundAlpha(TOP_ALIGNMENT);
        ChartPanel panel = new ChartPanel(chart);
        chartPanel.add(panel);
        panel.setVisible(true);
        panel.setSize(450, 500);

    }//GEN-LAST:event_orggeneratechartbtnActionPerformed

    private void gengeneratechartbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gengeneratechartbtnActionPerformed
        // TODO add your handling code here:
        int female = 0;
        int male = 0;
       

        for (User user : system.getUserDirectory().getUserDirectory()) {
            System.out.println(user.getGender());
            if (user.getGender() != null && user.getGender().equalsIgnoreCase("Male")) {
                male++;
            }
         if (user.getGender() != null && user.getGender().equalsIgnoreCase("Female")) {
                female++;
            }
        }
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Males", male);
        pieDataset.setValue("Females", female);
        JFreeChart chart = ChartFactory.createPieChart("Pie chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();
        ChartPanel panel = new ChartPanel(chart);
        chartPanel.add(panel);
        panel.setVisible(true);
        panel.setSize(450, 500);
    }//GEN-LAST:event_gengeneratechartbtnActionPerformed

    private void recgeneratechartbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recgeneratechartbtnActionPerformed
        // TODO add your handling code here:
        int receiver = 0;
        int donor = 0;
       

        for (User user : system.getUserDirectory().getUserDirectory()) {
            if (user.getType() == 'd') {
                donor++;
            }
          if (user.getType() == 'r') {
                receiver++;
            }
        }      
        DefaultCategoryDataset pieDataset = new DefaultCategoryDataset();
        final String donor1 = "Donor";     
        final String receiver1 = "Receiver";  
        final String type = "Type";        
         pieDataset.addValue( donor , donor1 , type );     
         pieDataset.addValue( receiver , receiver1 , type );     
        JFreeChart barChart = ChartFactory.createBarChart(
         "Donors to Receiver Ratio", 
         "Category", "Score", 
         pieDataset,PlotOrientation.VERTICAL, 
         true, true, false);
        //P.setForegroundAlpha(TOP_ALIGNMENT);
        ChartPanel panel = new ChartPanel(barChart);
        chartPanel.add(panel);
        panel.setVisible(true);
        panel.setSize(450, 500);
    }//GEN-LAST:event_recgeneratechartbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgdimg;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JButton gengeneratechartbtn;
    private javax.swing.JLabel headerlabel;
    private javax.swing.JLabel lblchartgender;
    private javax.swing.JLabel lblgetpiechartavl;
    private javax.swing.JLabel lblnorecchart;
    private javax.swing.JButton orggeneratechartbtn;
    private javax.swing.JButton recgeneratechartbtn;
    // End of variables declaration//GEN-END:variables

}
