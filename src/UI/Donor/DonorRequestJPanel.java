/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Donor;

import Backend.EcoSystem;
import Backend.Enterprise.Enterprise;
import static Backend.Enterprise.Enterprise.EnterpriseType.OrganBank;
import Backend.NGO.NGO;
import Backend.Organization.CoordinatorOrganization;
import Backend.Organization.Organization;
import Backend.User.User;
import Backend.WorkQueue.CoordinatorTestWorkRequest;
import Backend.WorkQueue.WorkRequest;
import java.awt.Image;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arun Balasubramanian
 */
public class DonorRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUsersJPanel
     */
     private EcoSystem system;
    private User user;
    public DonorRequestJPanel(EcoSystem system,User user) {
        initComponents();
         this.system = system;
         this.user =user;
         populateTable();
          if(user.getdP() !=null){
        //Working line
         byte[] JLabelpictureLabel = user.getdP();
        ImageIcon i = setPicturebyte(JLabelpictureLabel);
        }
        else{
            System.err.println("No Image");
        }
    }
    private ImageIcon setPicturebyte(byte[] byteArrayImage){

        ImageIcon imageCar;
        imageCar = new ImageIcon(byteArrayImage);
        Image picCar = imageCar.getImage();
        JLabel pictureLabel1 = new JLabel();
        pictureLabel1.setSize(107, 133);
        Image resizedImage = picCar.getScaledInstance(pictureLabel1.getWidth(), pictureLabel1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon selectedCarPicture = new ImageIcon(resizedImage);
        return selectedCarPicture;  
}
     private void populateTable() {
         
         DefaultTableModel model = (DefaultTableModel) tblreq.getModel();

         model.setRowCount(0);
         System.out.println(system);
         System.out.println(system.getngoList());
         for (NGO ngo : system.getngoList()) {
             System.out.println(ngo.getName());
             if ((user.isLiver() == true && "LiverNGO".equals(ngo.getName()) ) || (user.isLimbs() == true && "LimbsNGO".equals(ngo.getName()) )){
             for (Enterprise enterprise : ngo.getEnterpriseDirectory().getEnterpList()) {
                 if (enterprise.getEnterpriseType().equals(OrganBank)) {
                 Object[] row = new Object[4];
                 row[0] = ngo;
                 row[1] = enterprise;
                 model.addRow(row);
                 }
             }

         }
         }
         populateRequestTable();
    }
     
    private void populateRequestTable() {

        DefaultTableModel model = (DefaultTableModel) tblstatus.getModel();

        model.setRowCount(0);

        for (WorkRequest request : user.getUserRequestList()) {
            Object[] row = new Object[4];
            row[0] = request.getUser().getUserName();
            //row[1] = request.getDonorOrgan();
            for (NGO ngo : system.getngoList()) {
             for (Enterprise enterprise : ngo.getEnterpriseDirectory().getEnterpList()) {
                 if (enterprise.getEnterpriseType().equals(OrganBank)) {
                 row[1] = ngo;
                 //model.addRow(row);
                 }
             }

         }

            row[2] = request.getOverallStatus();
            row[3] = request.getActionDate();
            model.addRow(row);
        }

    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        srnpn1 = new javax.swing.JScrollPane();
        tblstatus = new javax.swing.JTable();
        btnrsendeq = new javax.swing.JButton();
        srnpn2 = new javax.swing.JScrollPane();
        tblreq = new javax.swing.JTable();
        labeltitle = new javax.swing.JLabel();
        bgdimg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1100, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblstatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "NGO Name", "Status", "Date"
            }
        ));
        tblstatus.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        srnpn1.setViewportView(tblstatus);

        add(srnpn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 530, 110));

        btnrsendeq.setBackground(new java.awt.Color(0, 9, 21));
        btnrsendeq.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        btnrsendeq.setForeground(new java.awt.Color(255, 255, 255));
        btnrsendeq.setText("Send Request");
        btnrsendeq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrsendeqActionPerformed(evt);
            }
        });
        add(btnrsendeq, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 480, 123, -1));

        tblreq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NGO", "Enterprise Name"
            }
        ));
        tblreq.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        srnpn2.setViewportView(tblreq);

        add(srnpn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 530, 170));

        labeltitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        labeltitle.setForeground(new java.awt.Color(255, 255, 255));
        labeltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeltitle.setText("Request Organ Bank");
        add(labeltitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 50));

        bgdimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/donor.png"))); // NOI18N
        add(bgdimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 800));
    }// </editor-fold>//GEN-END:initComponents

    private void btnrsendeqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrsendeqActionPerformed
        // TODO add your handling code here:
        if(user.isCompleteProfile()==false){
            JOptionPane.showMessageDialog(null, "Please complete your profile first", "Warning", JOptionPane.WARNING_MESSAGE);
           
        }
        else{
        CoordinatorTestWorkRequest request = new CoordinatorTestWorkRequest(); 
        
        String organDonate = "";

        if (user.isHeart() == true) {
            organDonate = "heart";
        }

        if (user.isEyes() == true) {
            organDonate = "eyes";
        }

        if (user.isKidney() == true) {
            organDonate = "kidney";
        }

        if (user.isLiver() == true) {
            organDonate = "liver";
        }

        if (user.isLungs() == true) {
            organDonate = "lungs";
        }
        
        for (WorkRequest req : user.getUserRequestList()) {
        
        if (req.getDonorOrgan().equals(organDonate)){
        
        JOptionPane.showMessageDialog(null, "Organ Already requested", "Error", JOptionPane.ERROR_MESSAGE);
        return;
        }
        }
    
        request.setUser(user);
        request.setActionDate(new Date());
        request.setCoordinatorStatus("Requested by Donor");
        request.setOverallStatus("Requested for Donation");
        request.setDonorOrgan(organDonate);
        
        int row = tblreq.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Organization org = null;
        Enterprise enterprise = (Enterprise) tblreq.getValueAt(row, 1);
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof CoordinatorOrganization) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            user.addUserRequest(request);
            JOptionPane.showMessageDialog(null,"Request Sent Successfully", "Info", JOptionPane.INFORMATION_MESSAGE);
            populateRequestTable();
        } else {
        
         JOptionPane.showMessageDialog(null, "No organization present", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
        
    }//GEN-LAST:event_btnrsendeqActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgdimg;
    private javax.swing.JButton btnrsendeq;
    private javax.swing.JLabel labeltitle;
    private javax.swing.JScrollPane srnpn1;
    private javax.swing.JScrollPane srnpn2;
    private javax.swing.JTable tblreq;
    private javax.swing.JTable tblstatus;
    // End of variables declaration//GEN-END:variables

   
}
