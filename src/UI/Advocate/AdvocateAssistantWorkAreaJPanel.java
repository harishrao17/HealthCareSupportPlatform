/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Advocate;


import Backend.Connection.Connection;
import Backend.EcoSystem;
import Backend.Enterprise.Enterprise;
import Backend.NGO.NGO;
import Backend.Organization.AdvocateOrganization;
import Backend.Organization.Organization;
import Backend.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harish
 */
public class AdvocateAssistantWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private AdvocateOrganization organization;
    private Enterprise enterprise;
     private NGO ngo;
    /**
     * Creates new form CoordinatorAssistantWorkAreaJPanel
     */
    
    public AdvocateAssistantWorkAreaJPanel( JPanel userProcessContainer, UserAccount userAccount, Organization organization, EcoSystem business, Enterprise enterprise ,  NGO ngo) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.organization = (AdvocateOrganization)organization;
        this.enterprise = enterprise ;
        this.ngo = ngo;
        populateTable();
    }
    
    public void populateTable(){
          DefaultTableModel model = (DefaultTableModel)advtbl.getModel();
        
          model.setRowCount(0);
        
        for(Connection connection : organization.getConnectionDirectory().getconnecList()){

         if ( connection.getAdvStatus().equals("Requested to Advocate") || connection.getAdvAss().getUsername().equals( userAccount.getUsername()) )
  { 

            Object[] row = new Object[5];
            row[0] = connection.getDonorReq().getUser().getName();
            row[1] = connection;
            row[2] = connection.getReceiverReq().getUser().getName();
            if (connection.getAdvStatus().equals("Requested to Advocate"))  {
                row[3] =  "unassinged";
            }
            else {
             row[3] = connection.getAdvAss().getUsername();
            }
            row[4] = connection.getAdvStatus();    
             
                model.addRow(row);
            
            }
      }
        
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Prosingbtn = new javax.swing.JButton();
        srlpne1 = new javax.swing.JScrollPane();
        advtbl = new javax.swing.JTable();
        asnbtn = new javax.swing.JButton();
        lbl4 = new javax.swing.JLabel();
        bgdimg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(null);
        setMinimumSize(null);
        setPreferredSize(null);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Prosingbtn.setText("Process");
        Prosingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProsingbtnActionPerformed(evt);
            }
        });
        add(Prosingbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 100, -1));

        advtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Donor Name", "Organ Name", "Recipients Name", "Doctor Treating", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        srlpne1.setViewportView(advtbl);

        add(srlpne1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 550, 130));

        asnbtn.setText("Assign to me");
        asnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asnbtnActionPerformed(evt);
            }
        });
        add(asnbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, 120, -1));

        lbl4.setBackground(new java.awt.Color(255, 255, 255));
        lbl4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl4.setText("Requests Management");
        add(lbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 60));

        bgdimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/advacate_employe.jpg"))); // NOI18N
        bgdimg.setMaximumSize(null);
        bgdimg.setMinimumSize(null);
        bgdimg.setPreferredSize(null);
        add(bgdimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
//        int selectedRow = workRequestJTable.getSelectedRow();
//        
//        if (selectedRow < 0){
//            return;
//        }
    private void ProsingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProsingbtnActionPerformed
        
         
   int selectedRow = advtbl.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
          if (advtbl.getValueAt(selectedRow, 4).equals("Completed") || advtbl.getValueAt(selectedRow, 4).equals("Rejected")) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (advtbl.getValueAt(selectedRow, 3) == "unassinged") {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself and then proceed" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Connection connection = (Connection)advtbl.getValueAt(selectedRow, 1);
        
        
        //DocumentsJPanel request = (AdvocateDocumentsJPanel)workRequestJTable.getValueAt(selectedRow, 2);
       AdvocateDocumentsJPanel advocateJpanel = new AdvocateDocumentsJPanel( userProcessContainer,userAccount,  organization,  business,  enterprise,connection, ngo);
        userProcessContainer.add("DocumentsJPanel",advocateJpanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
//       AdvocateDocumentsJPanel advocateJpanel = new AdvocateDocumentsJPanel(connection1,userProcessContainer, userAccount, coordinator, business ,enterprise);
//        userProcessContainer.add("DocumentsJPanel",advocateJpanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
//        
          
        
    }//GEN-LAST:event_ProsingbtnActionPerformed
      int xx,xy; 
    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
          int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);  
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
           xx = evt.getX();
          xy = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void asnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asnbtnActionPerformed
        // TODO add your handling code here:
          int selectedRow = advtbl.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (advtbl.getValueAt(selectedRow, 4).equals("Completed") || advtbl.getValueAt(selectedRow, 4).equals("Rejected") ) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (advtbl.getValueAt(selectedRow, 3) != "unassinged") {
            JOptionPane.showMessageDialog(null, "Request is already assigned " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection connection = (Connection)advtbl.getValueAt(selectedRow, 1);
        connection.setAdvAss(userAccount);
       
        connection.setAdvStatus("With Advocate");
        connection.getReceiverReq().setOverallStatus("Request with Advocate " + userAccount.getUsername());
        connection.getDonorReq().setOverallStatus("Request with Advocate " + userAccount.getUsername());
        connection.getReceiverReq().setActionDate(new Date());
        connection.getDonorReq().setActionDate(new Date());
        JOptionPane.showMessageDialog(null, "Request assigned " ,"Info" , JOptionPane.INFORMATION_MESSAGE);
        populateTable();
    }//GEN-LAST:event_asnbtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Prosingbtn;
    private javax.swing.JTable advtbl;
    private javax.swing.JButton asnbtn;
    private javax.swing.JLabel bgdimg;
    private javax.swing.JLabel lbl4;
    private javax.swing.JScrollPane srlpne1;
    // End of variables declaration//GEN-END:variables
}
