/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Coordinator;

import Backend.EcoSystem;
import Backend.Enterprise.Enterprise;
import Backend.Organization.CoordinatorOrganization;
import Backend.Organization.Organization;
import Backend.UserAccount.UserAccount;
import Backend.WorkQueue.CoordinatorTestWorkRequest;
import Backend.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arun Balasubramanian
 */
public class CoordinatorManageRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUsersJPanel
     */
   private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private CoordinatorOrganization coordinator;
    private Enterprise enterprise;

    public CoordinatorManageRequestsJPanel( JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.coordinator = (CoordinatorOrganization)organization;
        this.enterprise = enterprise ;
        crdnametxt.setText(userAccount.getEmployee().getName());
        txtorganization.setText(coordinator.getOrgName());
       
        txtorgbk.setText(enterprise.getName());
        populateTable();
          if(userAccount.getEmployee().getdP() !=null){
        //Working line
         byte[] JLabelpictureLabel = userAccount.getEmployee().getdP();
        ImageIcon i = setPicturebyte(JLabelpictureLabel);
        photoLabel.setIcon(i);
        }
        else{
            System.err.println("No Image");
        }
          
    }
   private ImageIcon setPicturebyte(byte[] byteArrayImage){

        ImageIcon imageCar;
        imageCar = new ImageIcon(byteArrayImage);
        Image picCar = imageCar.getImage();
        JLabel pictureLabel1 = new JLabel();
        pictureLabel1.setSize(107, 133);
        Image resizedImage = picCar.getScaledInstance(pictureLabel1.getWidth(), pictureLabel1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon selectedCarPicture = new ImageIcon(resizedImage);
        return selectedCarPicture;  
}
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : coordinator.getWorkQueue().getWorkRequestList()){

         if ( request.getCoordinatorStatus().equals("Requested by Donor") ||request.getCoordinatorStatus().equals("Requested by Receiver") || request.getCoordinatorAssigned().getUsername() == userAccount.getUsername() )
  { 
      
            Object[] row = new Object[6];
            row[0] = request.getUser();
            row[1] = request.getUser().getType() == 'd'  ? "donor" : "receiver" ;
            row[2] = request    ;     
            if (request.getCoordinatorStatus().equals("Requested by Donor")||request.getCoordinatorStatus().equals("Requested by Receiver"))  {
                row[3] =  "unassinged";
            }
            else {
             row[3] = request.getCoordinatorAssigned().getUsername();
            }
            row[4] = request.getCoordinatorStatus();
            if(request.getUser().getType() == 'd'){
            row[5] = request.getDonorOrgan();
                    }
            else{
            row[5] = request.getReceiverOrgan();
            }
                     
            model.addRow(row);
            
            }
      }
        
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        srlpn1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        asnbtn = new javax.swing.JButton();
        prsbtn = new javax.swing.JButton();
        tltlbl = new javax.swing.JLabel();
        cordnamelbl = new javax.swing.JLabel();
        crdnametxt = new javax.swing.JTextField();
        orgbanklbl = new javax.swing.JLabel();
        txtorgbk = new javax.swing.JTextField();
        orglbl = new javax.swing.JLabel();
        txtorganization = new javax.swing.JTextField();
        photoLabel = new javax.swing.JLabel();
        bgdimg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(null);
        setMinimumSize(null);
        setPreferredSize(null);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl1.setAutoCreateRowSorter(true);
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client's Name", "Type", "Date", "Assigned", "Status", "Organ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        srlpn1.setViewportView(tbl1);

        add(srlpn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 460, 190));

        asnbtn.setBackground(new java.awt.Color(0, 0, 0));
        asnbtn.setForeground(new java.awt.Color(255, 255, 255));
        asnbtn.setText("Assign to me");
        asnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asnbtnActionPerformed(evt);
            }
        });
        add(asnbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, -1, -1));

        prsbtn.setBackground(new java.awt.Color(0, 0, 0));
        prsbtn.setForeground(new java.awt.Color(255, 255, 255));
        prsbtn.setText("Process");
        prsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prsbtnActionPerformed(evt);
            }
        });
        add(prsbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 540, 100, -1));

        tltlbl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        tltlbl.setForeground(new java.awt.Color(255, 255, 255));
        tltlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tltlbl.setText("Manage Requests for Coordinator");
        add(tltlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 64));

        cordnamelbl.setBackground(new java.awt.Color(255, 255, 255));
        cordnamelbl.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        cordnamelbl.setForeground(new java.awt.Color(255, 255, 255));
        cordnamelbl.setText("Coordinator's Name");
        add(cordnamelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 125, -1));

        crdnametxt.setEditable(false);
        crdnametxt.setBorder(null);
        crdnametxt.setCaretColor(new java.awt.Color(30, 59, 92));
        crdnametxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                crdnametxtFocusGained(evt);
            }
        });
        crdnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crdnametxtActionPerformed(evt);
            }
        });
        add(crdnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 140, 22));

        orgbanklbl.setBackground(new java.awt.Color(255, 255, 255));
        orgbanklbl.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        orgbanklbl.setForeground(new java.awt.Color(255, 255, 255));
        orgbanklbl.setText("Organ Bank ");
        add(orgbanklbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, -1, -1));

        txtorgbk.setEditable(false);
        txtorgbk.setBorder(null);
        txtorgbk.setCaretColor(new java.awt.Color(30, 59, 92));
        txtorgbk.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtorgbkFocusGained(evt);
            }
        });
        txtorgbk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtorgbkActionPerformed(evt);
            }
        });
        add(txtorgbk, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 140, 20));

        orglbl.setBackground(new java.awt.Color(255, 255, 255));
        orglbl.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        orglbl.setForeground(new java.awt.Color(255, 255, 255));
        orglbl.setText("Organization");
        add(orglbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        txtorganization.setEditable(false);
        txtorganization.setBorder(null);
        txtorganization.setCaretColor(new java.awt.Color(30, 59, 92));
        txtorganization.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtorganizationFocusGained(evt);
            }
        });
        txtorganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtorganizationActionPerformed(evt);
            }
        });
        add(txtorganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 140, 20));

        photoLabel.setBackground(new java.awt.Color(255, 255, 255));
        photoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        photoLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        add(photoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 107, 133));

        bgdimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/healthcare_future.jpg"))); // NOI18N
        bgdimg.setMaximumSize(null);
        bgdimg.setMinimumSize(null);
        bgdimg.setPreferredSize(null);
        add(bgdimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void asnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asnbtnActionPerformed

      int selectedRow = tbl1.getSelectedRow();
        
       if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        
         if (tbl1.getValueAt(selectedRow, 4).equals("Completed") || tbl1.getValueAt(selectedRow, 4).equals("Rejected") ) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }

        
        if (tbl1.getValueAt(selectedRow, 3) != "unassinged") {
            JOptionPane.showMessageDialog(null, "Request is already assigned " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }
            
        
        WorkRequest request = (WorkRequest)tbl1.getValueAt(selectedRow, 2);
        request.setCoordinatorAssigned(userAccount);
        request.setCoordinatorStatus("With co-ordinator");
        request.setOverallStatus("Request with Co-ordinator " + userAccount.getUsername());
        request.setActionDate(new Date());
        JOptionPane.showMessageDialog(null, "Request assigned " ,"Info" , JOptionPane.INFORMATION_MESSAGE);
        populateTable();

    }//GEN-LAST:event_asnbtnActionPerformed

    private void prsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prsbtnActionPerformed
         int selectedRow = tbl1.getSelectedRow();
        
         if (tbl1.getSelectedRowCount() != 1){
            JOptionPane.showMessageDialog(null, "Please select one row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        
         if (tbl1.getValueAt(selectedRow, 4).equals("Completed") || tbl1.getValueAt(selectedRow, 4).equals("Rejected")) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }
       
        if (tbl1.getValueAt(selectedRow, 3) == "unassinged") {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself and then proceed" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        System.out.println(tbl1.getValueAt(selectedRow,5));
        CoordinatorTestWorkRequest request = (CoordinatorTestWorkRequest)tbl1.getValueAt(selectedRow, 2);
        CoordinatorMedicalCheckDetailsJPanel medicalHistory = new CoordinatorMedicalCheckDetailsJPanel(request,enterprise,userAccount,(String)tbl1.getValueAt(selectedRow,5));
        userProcessContainer.add("CoordinatorAssistantWorkAreaJPanel",medicalHistory);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_prsbtnActionPerformed

    private void crdnametxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_crdnametxtFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_crdnametxtFocusGained

    private void crdnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crdnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crdnametxtActionPerformed

    private void txtorgbkFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtorgbkFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtorgbkFocusGained

    private void txtorgbkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtorgbkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtorgbkActionPerformed

    private void txtorganizationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtorganizationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtorganizationFocusGained

    private void txtorganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtorganizationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtorganizationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asnbtn;
    private javax.swing.JLabel bgdimg;
    private javax.swing.JLabel cordnamelbl;
    private javax.swing.JTextField crdnametxt;
    private javax.swing.JLabel orgbanklbl;
    private javax.swing.JLabel orglbl;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JButton prsbtn;
    private javax.swing.JScrollPane srlpn1;
    private javax.swing.JTable tbl1;
    private javax.swing.JLabel tltlbl;
    private javax.swing.JTextField txtorganization;
    private javax.swing.JTextField txtorgbk;
    // End of variables declaration//GEN-END:variables
}
