/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Delivery;

import Backend.Connection.Connection;
import Backend.EcoSystem;
import Backend.Enterprise.Enterprise;
import static Backend.Enterprise.Enterprise.EnterpriseType.HospitalDepartment;
import Backend.NGO.NGO;
import Backend.Organization.DeliveryOrganization;
import Backend.Organization.DoctorOrganization;
import Backend.Organization.Organization;
import Backend.UserAccount.UserAccount;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nehar
 */
public class DeliveryAssistantWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryAssistantWorkArea
     */
    
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private DeliveryOrganization organization;
    private Enterprise enterprise;
    public DeliveryAssistantWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.organization = (DeliveryOrganization)organization;
        this.enterprise = enterprise ;
        System.out.println(100);
        System.out.println(enterprise);
        System.out.println(100);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Prosingbtn = new javax.swing.JButton();
        srlpne1 = new javax.swing.JScrollPane();
        advtbl = new javax.swing.JTable();
        asnbtn = new javax.swing.JButton();
        lbl4 = new javax.swing.JLabel();
        bgdimg = new javax.swing.JLabel();

        setMaximumSize(null);
        setMinimumSize(null);
        setPreferredSize(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(null);
        jPanel1.setMinimumSize(null);
        jPanel1.setPreferredSize(null);
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1formMouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1formMousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Prosingbtn.setText("Process");
        Prosingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProsingbtnActionPerformed(evt);
            }
        });
        jPanel1.add(Prosingbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 100, -1));

        advtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organ", "Receiver Name", "Delivery employee", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        srlpne1.setViewportView(advtbl);

        jPanel1.add(srlpne1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 550, 130));

        asnbtn.setText("Assign to me");
        asnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asnbtnActionPerformed(evt);
            }
        });
        jPanel1.add(asnbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, 120, -1));

        lbl4.setBackground(new java.awt.Color(255, 255, 255));
        lbl4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl4.setForeground(new java.awt.Color(255, 255, 255));
        lbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl4.setText("Requests Management ");
        jPanel1.add(lbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 60));

        bgdimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/healthcare_future.jpg"))); // NOI18N
        bgdimg.setMaximumSize(null);
        bgdimg.setMinimumSize(null);
        bgdimg.setPreferredSize(null);
        jPanel1.add(bgdimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2000, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1153, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void ProsingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProsingbtnActionPerformed

        int selectedRow = advtbl.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (advtbl.getValueAt(selectedRow, 3).equals("Completed") || advtbl.getValueAt(selectedRow, 3).equals("Rejected")) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (advtbl.getValueAt(selectedRow, 2) == "unassinged") {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself and then proceed" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }

        Connection connection = (Connection)advtbl.getValueAt(selectedRow, 0);
        
        System.out.println(connection);
        Enterprise DocEnt = null;
        for (NGO ngo : business.getngoList()) {
            if(ngo.getEnterpriseDirectory().getEnterpList().contains(enterprise )){
                System.out.println(ngo);
            for (Enterprise allenterprise : ngo.getEnterpriseDirectory().getEnterpList()) {

                if (allenterprise.getEnterpriseType().equals(HospitalDepartment)) {
                    DocEnt = allenterprise;
                    break;
                }
            }
            if(DocEnt != null){
                break;
            }

        }
        }
        System.out.println(DocEnt);
        Organization org = null;
        System.out.println(DocEnt.getOrganizationDirectory().getOrganizationList());
        for (Organization organization : DocEnt.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof DoctorOrganization) {
                org = organization;
                break;
            }
            if(org!=null){
                break;
            }
        }
        System.out.println(1);
        System.out.println(org);
        //System.out.println();
        System.out.println(2);
        
            if (org != null) {
            System.out.println(org.getConnectionDirectory());
            System.out.println(3);
            System.out.println(org.getConnectionDirectory().getconnecList());
            org.getConnectionDirectory().getconnecList().add(connection);
            System.out.println("Ikkada unna doctor");
            connection.setDelStatus("Completed");
            connection.setDocStatus("Requested to Doctor");
            connection.getReceiverReq().setOverallStatus("Approved by delivery, Now will be taken care by Delivery");

            connection.setInventStatus("Approved By delivery, Now will be taken cre by Doctor");
            JOptionPane.showMessageDialog(null, "Request Sent Successfully");
            } else {
            
                JOptionPane.showMessageDialog(null, "Doctor organization not present", "Error", JOptionPane.ERROR_MESSAGE);
            
            }

//        //DocumentsJPanel request = (AdvocateDocumentsJPanel)workRequestJTable.getValueAt(selectedRow, 2);
//        DeliveryDocumentsJPanel advocateJpanel = new AdvocateDocumentsJPanel( userProcessContainer,userAccount,  organization,  business,  enterprise,connection);
//        userProcessContainer.add("DocumentsJPanel",advocateJpanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
//        //       AdvocateDocumentsJPanel advocateJpanel = new AdvocateDocumentsJPanel(connection1,userProcessContainer, userAccount, coordinator, business ,enterprise);
//        //        userProcessContainer.add("DocumentsJPanel",advocateJpanel);
//        //        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        //        layout.next(userProcessContainer);
//        //

    }//GEN-LAST:event_ProsingbtnActionPerformed
    public void populateTable(){
          DefaultTableModel model = (DefaultTableModel)advtbl.getModel();
        
          model.setRowCount(0);
        
        for(Connection connection : organization.getConnectionDirectory().getconnecList()){
            
         if ( connection.getDelStatus().equals("Requested to Delivery") || connection.getAdvAss().getUsername().equals( userAccount.getUsername()) )
  { 

            Object[] row = new Object[4];
            
            row[0] = connection;
//            row[1] = connection;
            row[1] = connection.getReceiverReq().getUser().getName();
            if (connection.getDelStatus().equals("Requested to Delivery"))  {
                row[2] =  "unassinged";
            }
            else {
             row[2] = connection.getAdvAss().getUsername();
            }
            row[3] = connection.getDelStatus();    
            
             
                model.addRow(row);
            
            }
      }
        
        }
    private void asnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asnbtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = advtbl.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (advtbl.getValueAt(selectedRow, 3).equals("Completed") || advtbl.getValueAt(selectedRow, 3).equals("Rejected") ) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (advtbl.getValueAt(selectedRow, 2) != "unassinged") {
            JOptionPane.showMessageDialog(null, "Request is already assigned " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection connection = (Connection)advtbl.getValueAt(selectedRow, 0);
        connection.setAdvAss(userAccount);

        connection.setDelStatus("With Delivery");
        connection.getReceiverReq().setOverallStatus("Request with Delivery " + userAccount.getUsername());
        
        connection.getReceiverReq().setActionDate(new Date());
      
        JOptionPane.showMessageDialog(null, "Request assigned " ,"Info" , JOptionPane.INFORMATION_MESSAGE);
        populateTable();
    }//GEN-LAST:event_asnbtnActionPerformed
    int xx,xy;
    private void jPanel1formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1formMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel1formMouseDragged

    private void jPanel1formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1formMousePressed
        // TODO add your handling code here:
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jPanel1formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Prosingbtn;
    private javax.swing.JTable advtbl;
    private javax.swing.JButton asnbtn;
    private javax.swing.JLabel bgdimg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl4;
    private javax.swing.JScrollPane srlpne1;
    // End of variables declaration//GEN-END:variables
}
